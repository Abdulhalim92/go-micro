services:
  broker-service:
    container_name: broker-service
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    container_name: logger-service
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    ports:
      - "8083:80"
    deploy:
      mode: replicated
      replicas: 1

  mailer-service:
    container_name: mailer-service
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    ports:
      - "8084:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  authentication-service:
    container_name: authentication-service
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8082:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/users
      DSN: "host=postgres port=5432 user=postgres password=postgres dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  postgres:
    image: postgres:16.3-alpine3.20
    container_name: postgres
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data

  mongo:
    container_name: mongo
    image: mongodb/mongodb-enterprise-server
    ports:
      - "27017:27017"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
        - ./db-data/mongo/:/data/db

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    ports:
      - "1012:1025"
      - "8025:8025"
    deploy:
      mode: replicated
      replicas: 1